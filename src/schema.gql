# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type City {
  city_code: String!
  city_name: String!
  id: Int!
  province: Province
}

type Company {
  account_discord: String
  account_lamudi: String
  account_olx: String
  account_rumah123: String
  account_rumahcom: String
  account_whatsapp_number: String
  city: City
  city_id: City
  company_desc: String!
  company_logo: File
  company_logo_id: File
  company_name: String!
  company_type: String
  country: Country
  country_id: Country
  full_address: String
  id: String!
  owner: User
  property_count: Float
  province: Province
  province_id: Province
  subdistrict: Subdistrict
  subdistrict_id: Subdistrict
}

input CompanyInput {
  company_desc: String!
  company_logo_id: String
  company_name: String!
}

type CompanyResponse {
  account_discord: String
  account_lamudi: String
  account_olx: String
  account_rumah123: String
  account_rumahcom: String
  account_whatsapp_number: String
  city: City
  company_desc: String!
  company_logo: File
  company_logo_id: String
  company_name: String
  company_type: String
  country: Country
  full_address: String
  id: String
  owner: User
  property_count: Float
  province: Province
  subdistrict: Subdistrict
}

type Country {
  country_code: String!
  country_name: String!
  id: Int!
}

input CreateCityInput {
  city_code: String
  city_name: String!
  id: Float
  province_id: Float!
}

input CreateCountryInput {
  country_code: String
  country_name: String!
  id: Float
}

input CreateFileInput {
  filename: String
  filepath: String
  id: String
  mimetype: String
  rendered_url: String
  size: Float
  uniquekey: String
  uploaded_by: String
}

input CreateLeadExtraInput {
  key: String!
  value: String!
}

input CreateLeadInput {
  email: String!
  extra: [CreateLeadExtraInput!] = []

  """Nama lengkap, required!"""
  full_name: String!
  lead_object_id: String
  lead_type: String!

  """No Hp/Wa, required!"""
  phone: String!
  source_url: String
  user: String
}

input CreatePackageInput {
  id: Int
  is_displayed: Boolean
  is_enable: Boolean
  is_popular: Boolean
  package_billing_time_unit: Int!
  package_billing_unit: String!
  package_code: String!
  package_display_name: String!
  package_features: [PackageFeaturesInput!]
  package_icon: String!
  package_name: String!
  package_price: Int!
}

input CreatePropertyInput {
  metas: [PropertyMetaInput!]
  property: PropertyInput!
}

input CreatePropertyLikeInput {
  property: Int!
}

input CreateProvinceInput {
  country_id: Float!
  id: Float
  province_code: String
  province_name: String!
}

input CreateSubdistrictInput {
  city_id: Float!
  id: Float
  subdistrict_code: String
  subdistrict_name: String!
}

input CreateUserInput {
  account_discord: String
  account_lamudi: String
  account_olx: String
  account_rumah123: String
  account_rumahcom: String
  account_whatsapp_number: String
  agent_id: String
  city: Float
  company_id: String
  confirm_password: String!
  country: Float
  device_id: String
  display_name: String
  email: String!
  full_address: String
  full_name: String!
  id: String
  password: String!
  phone: String!
  photo_profile: String
  property_count: Float
  province: Float
  role: String!
  subdistrict: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type File {
  filename: String!
  filepath: String!
  id: String!
  mimetype: String!
  optimize_config: String
  rendered_url: String
  rendered_urls: String
  size: Float!
  updated_by: String
  uploaded_by: String!
}

type GlobalMutationResponse {
  affected: Float
  errors: [String!]
  message: String
  ok: Boolean!
}

type Lead {
  email: String!
  extra: String
  full_name: String!
  id: Int!
  lead_object_id: String
  lead_type: String!
  phone: String!
  source_url: String
  user: User
}

type LeadExtraResponse {
  key: String!
  value: String!
}

type LeadMutationResponse {
  affected: Float
  data: LeadResponse
  errors: [String!]
  message: String
  ok: Boolean!
}

type LeadResponse {
  created_at: DateTime
  email: String
  extra: [LeadExtraResponse!]
  full_name: String
  id: Int
  lead_object_id: String
  lead_type: String!
  phone: String
  source_url: String
  whatsapp_link: String
}

type LoginResponse {
  accessToken: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

input MetaQuery {
  fields: [String!]
  from: String
  page: Int = 1
  relations: Boolean = true
  sortBy: [OrderByQuery!]
  take: Int = 10
  to: String
  where: [WhereQuery!]
}

type Mutation {
  company(companyInput: CompanyInput!): CompanyResponse!
  createCity(createCityInput: CreateCityInput!): City!
  createCountry(createCountryInput: CreateCountryInput!): Country!
  createFile(createFileInput: CreateFileInput!): File!
  createLead(createLeadInput: CreateLeadInput!): LeadMutationResponse!
  createPackage(createPackageInput: CreatePackageInput!): Package!
  createProperty(createPropertyInput: CreatePropertyInput!): Property!
  createPropertyLike(createPropertyLikeInput: CreatePropertyLikeInput!): PropertyLike!
  createPropertyMeta(propertyMaster: PropertyMetaMasterInput!): PropertyMetaMaster!
  createProvince(createProvinceInput: CreateProvinceInput!): Province!
  createSubdistrict(createSubdistrictInput: CreateSubdistrictInput!): Subdistrict!
  createUser(createUserInput: CreateUserInput!): User!
  deleteUser(userid: String!): User!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  profile(profileData: UpdateUserInput!): User!
  removeCity(id: Int!): GlobalMutationResponse!
  removeCountry(id: Int!): Country!
  removeFile(id: String!): File!
  removeLead(id: Int!): Lead!
  removePackage(id: Int!): Package!
  removeProperty(id: Int!): GlobalMutationResponse!
  removePropertyLike(id: Int!): PropertyLike!
  removeProvince(id: Int!): GlobalMutationResponse!
  removeSubdistrict(id: Int!): GlobalMutationResponse!
  signup(signupUserInput: CreateUserInput!): User!
  updateCity(updateCityInput: UpdateCityInput!): GlobalMutationResponse!
  updateCountry(updateCountryInput: UpdateCountryInput!): Country!
  updateFile(updateFileInput: UpdateFileInput!): File!
  updateLead(updateLeadInput: UpdateLeadInput!): Lead!
  updatePackage(updatePackageInput: UpdatePackageInput!): Package!
  updateProperty(updatePropertyInput: UpdatePropertyInput!): GlobalMutationResponse!
  updatePropertyLike(updatePropertyLikeInput: UpdatePropertyLikeInput!): PropertyLike!
  updateProvince(updateProvinceInput: UpdateProvinceInput!): GlobalMutationResponse!
  updateSubdistrict(updateSubdistrictInput: UpdateSubdistrictInput!): GlobalMutationResponse!
  updateUser(profileData: UpdateUserInput!): UsersResponse!
}

input OrderByQuery {
  isAsc: Boolean
  key: String!
}

type Package {
  id: Int!
  is_displayed: Boolean
  is_enable: Boolean
  is_popular: Boolean
  ord: Int
  package_billing_time_unit: Int!
  package_billing_unit: String!
  package_code: String
  package_display_name: String!
  package_icon: String!
  package_name: String!
  package_price: Int!
}

type PackageFeature {
  feature_code: String!
  feature_group: String
  feature_icon: String
  feature_name: String!
  feature_type: String
  feature_value: String
  id: Int!
  parent_feature: PackageFeature
  value_prefix: String
  value_suffix: String
}

type PackageFeatures {
  feature: PackageFeature!
  feature_value: String!
  id: Int!
  package: Package!
}

input PackageFeaturesInput {
  feature_id: Int!
  feature_value: String!
}

type PackageResponse {
  id: Int!
  is_displayed: Boolean
  is_enable: Boolean
  is_popular: Boolean
  package_billing_time_unit: Int!
  package_billing_unit: String!
  package_code: String!
  package_display_name: String!
  package_features: [PackageFeature!]!
  package_icon: String!
  package_name: String!
  package_price: Int!
}

type Property {
  call_to_user: User!
  city: Float
  country: Float
  created_by_user: User!
  id: Int!
  metas: [PropertyMetaResponse!]!
  old_id: Int
  property_area_size: Float!
  property_bathroom_count: Int!
  property_bedroom_count: Int!
  property_build_years: Float!
  property_building_size: Float!
  property_building_type: String
  property_certificate_type: String!
  property_code: String
  property_condition: String!
  property_desc: String!
  property_electricy: String
  property_featured_image: String!
  property_floor_count: Int!
  property_full_address: String!
  property_garage_bike_volume: Int!
  property_garage_car_volume: Int!
  property_has_airconditioner: Boolean
  property_has_garage: Boolean
  property_has_heater: Boolean
  property_list_images: [String!]!
  property_list_images_file: [File!]!
  property_price: Int!
  property_price_second: Int
  property_title: String!
  property_type: String!
  province: Float
  purchase_type: String
  sales_status: String!
  sales_type: String!
  subdistrict: Float
  total_leads: Float!
  total_messages: Float!
  total_star: Float!
  total_views: Float!
}

input PropertyInput {
  call_to_user: String
  city: Float
  country: Float
  created_by_user: String
  property_area_size: Float!
  property_bathroom_count: Int!
  property_bedroom_count: Int!
  property_build_years: Int!
  property_building_size: Float
  property_certificate_type: String!
  property_code: String
  property_condition: String!
  property_desc: String!
  property_electricy: String
  property_featured_image: String!
  property_floor_count: Int
  property_full_address: String!
  property_garage_bike_volume: Int
  property_garage_car_volume: Int
  property_has_airconditioner: Boolean = false
  property_has_garage: Boolean = false
  property_has_heater: Boolean = false
  property_land_size: Float
  property_list_images: [String!]!
  property_price: Int!
  property_price_second: Int
  property_title: String!
  property_type: String!
  province: Float
  purchase_type: String = "ONCE"
  sales_status: String = "ACTIVE"
  sales_type: String = "SALE"
  subdistrict: Float
}

type PropertyLike {
  property: Property!
  user: User!
}

input PropertyMetaInput {
  master: String!
  property_constant_value: String!
}

type PropertyMetaMaster {
  display_name: String!
  icon: String
  property_constant: String!
  property_constant_group: String
  property_constant_type: String
}

input PropertyMetaMasterInput {
  display_name: String
  icon: String
  property_constant: String!
}

type PropertyMetaResponse {
  id: Float!
  master: String!
  property: Float!
  property_constant_value: String!
}

input PropertyMetaUpdate {
  master: String!
  property_constant_value: String!
}

type PropertyResponse {
  agent_rendered: User
  call_to_user: UsersResponse!
  city: City
  country: Country
  created_at: DateTime!
  created_by_user: UsersResponse!
  deleted_at: DateTime!
  features_extra: [PropertyMetaResponse!]
  full_address_rendered: String
  id: Int!
  listing_type_rendered: String
  metas: [PropertyMetaResponse!]
  property_area_size: Float!
  property_area_size_rendered: String
  property_bathroom_count: Int!
  property_bedroom_count: Int!
  property_build_years: Float!
  property_building_size: Float!
  property_building_size_rendered: String
  property_building_type: String
  property_certificate_type: String!
  property_code: String
  property_condition: String!
  property_desc: String!
  property_electricy: String
  property_featured_image: File!
  property_featured_image_url: String!
  property_floor_count: Int
  property_full_address: String!
  property_garage_bike_volume: Int
  property_garage_car_volume: Int
  property_has_airconditioner: Boolean
  property_has_airconditioner_rendered: String
  property_has_garage: Boolean
  property_has_garage_rendered: String
  property_has_heater: Boolean
  property_has_heater_rendered: String
  property_list_images: [String!]!
  property_list_images_url: [File!]!
  property_price: Int!
  property_price_rendered: String
  property_price_second: Int
  property_price_second_rendered: String
  property_title: String!
  property_type: String!
  property_type_rendered: String!
  province: Province
  purchase_type: String
  sales_status: String!
  sales_type: String!
  subdistrict: Subdistrict
  total_leads: Float!
  total_messages: Float!
  total_star: Float!
  total_views: Float!
  updated_at: DateTime!
}

type Province {
  country: Country!
  country_id: Float!
  id: Int!
  province_code: String!
  province_name: String!
}

type Query {
  agents: [UsersResponse!]!
  cities(keyword: String, province_id: Float): [City!]!
  city(id: Int!): City!
  countries(keyword: String): [Country!]!
  country(id: Int!): Country!
  file(id: String!): File!
  files(userid: String): [File!]!
  lead(id: Int!): LeadResponse!
  leads(option: MetaQuery): [LeadResponse!]!
  members(role: String!): [UsersResponse!]!
  package(id: Int!): Package!
  packages: [PackageResponse!]!
  packagess: [PackageFeatures!]!
  profile: UsersResponse!
  propFeatures: [PropertyMetaMaster!]!
  properties(option: MetaQuery): [PropertyResponse!]!
  property(id: Int!): PropertyResponse!
  propertyLike(id: Int!): PropertyLike!
  province(id: Int!): Province!
  provinces(country_id: Float, keyword: String): [Province!]!
  subdistrict(id: Int!): Subdistrict!
  subdistricts(city_id: Float, keyword: String): [Subdistrict!]!
  user(userid: String!): UsersResponse!
  userByDevice(deviceid: String!): UsersResponse!
  userByEmail(email: String!): UsersResponse!
  userdetail(userid: String!): UsersResponse!
  users: [UsersResponse!]!
}

type Subdistrict {
  city: City
  city_id: Float!
  id: Int!
  subdistrict_code: String!
  subdistrict_name: String!
}

input UpdateCityInput {
  city_code: String
  city_name: String
  id: Int!
  province_id: Float
}

input UpdateCountryInput {
  country_code: String
  country_name: String
  id: Int!
}

input UpdateFileInput {
  filename: String
  filepath: String
  id: String!
  mimetype: String
  rendered_url: String
  size: Float
  uniquekey: String
  uploaded_by: String
}

input UpdateLeadInput {
  email: String
  extra: [CreateLeadExtraInput!] = []

  """Nama lengkap, required!"""
  full_name: String
  id: Int!
  lead_object_id: String
  lead_type: String

  """No Hp/Wa, required!"""
  phone: String
  source_url: String
  user: String
}

input UpdatePackageInput {
  id: Int
  is_displayed: Boolean
  is_enable: Boolean
  is_popular: Boolean
  package_billing_time_unit: Int
  package_billing_unit: String
  package_code: String
  package_display_name: String
  package_features: [PackageFeaturesInput!]
  package_icon: String
  package_name: String
  package_price: Int
}

input UpdateProperty {
  call_to_user: String
  city: Float
  country: Float
  created_by_user: String
  property_bathroom_count: Int
  property_bedroom_count: Int
  property_build_years: Int
  property_building_size: Float
  property_certificate_type: String
  property_code: String
  property_condition: String
  property_desc: String
  property_electricy: String
  property_featured_image: String
  property_floor_count: Int
  property_full_address: String
  property_garage_bike_volume: Int
  property_garage_car_volume: Int
  property_has_airconditioner: Boolean = false
  property_has_garage: Boolean = false
  property_has_heater: Boolean = false
  property_land_size: Float
  property_list_images: [String!]
  property_price: Int
  property_price_second: Int
  property_title: String
  property_type: String
  province: Float
  purchase_type: String = "ONCE"
  sales_status: String = "ACTIVE"
  sales_type: String = "SALE"
  subdistrict: Float
}

input UpdatePropertyInput {
  id: Int!
  metas: [PropertyMetaUpdate!]
  property: UpdateProperty!
}

input UpdatePropertyLikeInput {
  id: Int!
  property: Int
}

input UpdateProvinceInput {
  country_id: Float
  id: Int!
  province_code: String
  province_name: String
}

input UpdateSubdistrictInput {
  city_id: Float
  id: Int!
  subdistrict_code: String
  subdistrict_name: String
}

input UpdateUserInput {
  account_discord: String
  account_lamudi: String
  account_olx: String
  account_rumah123: String
  account_rumahcom: String
  account_whatsapp_number: String
  agent_id: String
  capabilities: String
  city: Float
  company_id: String
  confirm_password: String
  country: Float
  device_id: String
  display_name: String
  email: String
  email_confirmed_at: DateTime
  extra: String
  full_address: String
  full_name: String
  id: String
  notification_id: String
  password: String
  phone: String
  phone_confirmed_at: DateTime
  photo_profile: String
  property_count: Float
  province: Float
  resetpasswordkey: String
  role: String
  subdistrict: Float
}

type User {
  account_discord: String
  account_lamudi: String
  account_olx: String
  account_rumah123: String
  account_rumahcom: String
  account_whatsapp_number: String
  agent_id: String
  city: City
  company: Company!
  company_id: String
  country: Country
  created_at: DateTime!
  device_id: String!
  discord_link: String
  display_name: String
  email: String!
  email_confirmed_at: DateTime!
  errors: [String!]
  extra: String
  full_address: String
  full_name: String
  id: String!
  lamudi_link: String
  messages: String
  notification_id: String!
  olx_link: String
  phone: String!
  phone_confirmed_at: DateTime!
  photo_profile: File
  property_count: Float
  province: Province
  resetpasswordkey: String
  role: String!
  rumah123_link: String
  rumahcom_link: String
  subdistrict: Subdistrict
  updated_at: DateTime!
  whatsapp_link: String
}

type UsersResponse {
  account_discord: String
  account_lamudi: String
  account_olx: String
  account_rumah123: String
  account_rumahcom: String
  account_whatsapp_number: String
  city: City
  company: CompanyResponse
  country: Country
  device_id: String
  discord_link: String
  display_name: String
  email: String
  errors: [String!]
  extra: String
  full_address: String
  full_address_rendered: String
  full_name: String
  id: String
  lamudi_link: String
  messages: String
  olx_link: String
  phone: String
  photo_profile: File
  photo_profile_file: File
  property_count: Float
  province: Province
  province_resolve: Province
  role: String
  rumah123_link: String
  rumahcom_link: String
  subdistrict: Subdistrict
  whatsapp_link: String
}

input WhereQuery {
  key: String!
  nextOperator: String
  operator: String
  table: String
  value: String!
}